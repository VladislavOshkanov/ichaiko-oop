package ru.nsu.chaiko;

/**
 * Интерфейс, представляющий блокирующую очередь.
 *
 * @param <T> Тип элементов в очереди.
 */
public interface BlockingQueue<T> {
    /**
     * Добавляет элемент в очередь. Если очередь заполнена, метод блокируется до освобождения места.
     *
     * @param elem Элемент для добавления в очередь.
     *
     * @throws InterruptedException Если поток был прерван во время блокировки.
     */
    void put(T elem) throws InterruptedException;

    /**
     * Извлекает и удаляет элемент из очереди. Если очередь пуста, метод возвращает null.
     *
     * @return Элемент извлеченный из очереди, или null если очередь пуста.
     */
    T poll();

    /**
     * Проверяет, пуста ли очередь.
     *
     * @return true, если очередь пуста, в противном случае - false.
     */
    boolean isEmpty();
}
